import pandas,numpy,matplotlib.pyplot
matplotlib.pyplot.scatter(x,y,c='red')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 30))
matplotlib.pyplot.xticks(rotation=90)
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y)
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='*')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='x')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='v')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='^')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='o')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='1')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='|')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='>')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='<')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker=',')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='.')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
# Change the default figure size
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='+')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
# Change the default figure size
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.scatter(x,y, c='red', marker='_')
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.xlabel ("Date", fontsize = 24)
matplotlib.pyplot.ylabel ("Mean Temperature", fontsize = 24)
matplotlib.pyplot.title('Mean Temperature at Jaipur', fontsize = 30)
matplotlib.pyplot.xticks (fontsize = 12)
matplotlib.pyplot.yticks (fontsize = 12)
matplotlib.pyplot.xticks (rotation=30, horizontalalignment='right')
matplotlib.pyplot.show()
colors = numpy.random.rand(len(y)) # Create random value
matplotlib.pyplot.scatter(x,y,c=colors,alpha=0.5)
matplotlib.pyplot.show()
x = dataframe.date
y_1 = dataframe.max_temperature
y_2 = dataframe.min_temperature
y_3 = dataframe.mean_temperature
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.plot(x,y_1, label = "Max temp") 
matplotlib.pyplot.plot(x,y_2, label = "Min temp") 
matplotlib.pyplot.plot(x,y_3, label = "Mean temp") 
matplotlib.pyplot.xticks(numpy.arange(0, 731, 60))
matplotlib.pyplot.xticks (rotation=30)
matplotlib.pyplot.legend()
matplotlib.pyplot.show()
import matplotlib.pyplot
objects = ('Python', 'C++', 'Java', 'Perl', 'Scala', 'Lisp')
y_pos = numpy.arange(len(objects))
usage = [10,8,6,4,2,1]
matplotlib.pyplot.bar(y_pos, usage, align='center')
matplotlib.pyplot.xticks(y_pos, objects) # name the xticks 
matplotlib.pyplot.show()
x = dataframe.date
y = dataframe.mean_temperature
fig, (ax1, ax2,ax3,ax4) = matplotlib.pyplot.subplots(1, 4,  sharey=True) #create 2 subplots with shared y axis
fig.suptitle('Sharing Y axis')
ax1.plot(x, y)
ax2.scatter(x, y)
ax3.boxplot(y)
ax4.hist(y)
matplotlib.pyplot.show()
x = dataframe.date
y = dataframe.mean_temperature
fig, (ax1, ax2,ax3,ax4) = matplotlib.pyplot.subplots(1, 4,  sharex=True) #create 2 subplots with shared y axis
fig.suptitle('Sharing X axis')
ax1.plot(x, y)
ax2.scatter(x, y)
ax3.boxplot(y)
ax4.hist(y)
matplotlib.pyplot.show()
objects = ('','Auckland','Christchurch','Dunedin','Hamilton','Wellington')
y_pos = numpy.arange(len(objects))
matplotlib.pyplot.figure(figsize=(10,10))
matplotlib.pyplot.boxplot(yy)
matplotlib.pyplot.xticks(y_pos,objects)
matplotlib.pyplot.show()
import matplotlib.pyplot,numpy
x = numpy.linspace(0,10,100)
y = numpy.sin(x)
y1 = numpy.cos(x)
y2 = numpy.tan(x)
y3 = numpy.tanh(x)
y4 = numpy.sinc(x)
y5 = numpy.sinh(x)
y6 = numpy.cosh(x)
fig ,(ax1,ax2,ax3,ax4,ax5,ax6,ax7) = matplotlib.pyplot.subplots(1,7,figsize=(50,50))
ax1.plot(x,y)
ax2.plot(x,y1)
ax3.plot(x,y2)
ax4.plot(x,y3)
ax5.plot(x,y4)
ax6.plot(x,y5)
ax7.plot(x,y6)
matplotlib.pyplot.show()
X1 = [4,1,5,7]
print(X1)
X1[2] = 10
print(X1)
X1 = [i + 2 for i in X1]
print(X1)
dataset = [2, 1, 1, 4, 5, 8, 12, 4, 3, 8, 21, 1, 18, 5]
number_of_items = len(dataset)
print(number_of_items)
sum_of_items = sum(dataset)
print(sum_of_items)
mean = sum_of_items/number_of_items
print(mean)
dataset = sorted(dataset)
print(dataset)
middle_index = len(dataset)//2
print (middle_index)
median = dataset[middle_index] + dataset[middle_index-1]
median = median/2
print (median)
mode = max(dataset,key=dataset.count)
print (mode)
print('at:',df.at)
print('axes:')
print(df.axes)
print('attrs:',df.attrs)
print('columns:')
print(df.columns)
print('class:',df.__class__)
print('cov:')
print(df.cov())
print('corr:')
print(df.corr())
print('count:')
print(df.count())
print('cummin:')
print(df.cummin())
print('cummax:')
print(df.cummax())
print('cumsum:')
print(df.cumsum())
print('cumprod:')
print(df.cumprod())
print('diff:')
print(df.diff())
print('dtypes:')
print(df.dtypes)
print('describe:')
print(df.describe())
print('dict:',df.__dict__)
print('doc:',df.__doc__)
print('empty:',df.empty)
print('expanding:')
print(df.expanding())
print('flag:',df.flags)
print('first valid index:',df.first_valid_index())
print('head:')
print(df.head())
print('hash:',df.__hash__)
print('hist:')
print(df.hist())
print('iat:')
print(df.iat)
print('info:')
print(df.info())
print('isna:')
print(df.isna())
print('isnull:')
print(df.isnull())
print('iloc:',df.iloc)
print('index:',df.index)
print('loc:',df.loc)
print('idxmin:',df.idxmin())
print('idxmax:',df.idxmax())
print('items:',df.items())
print('iterrows:',df.iterrows())
print('itertuples:',df.itertuples())
print('keys:')
print(df.keys())
print('kurt:')
print(df.kurt())
print('kurtosis')
print(df.kurtosis())
print('last valid index:',df.last_valid_index())
print('melt:')
print(df.melt())
print('memory usage:')
print(df.memory_usage())
print('min:')
print(df.min())
print('max:')
print(df.max())
print('mean:')
print(df.mean())
print('median:')
print(df.median())
print('mode:')
print(df.mode())
print('module:',df.__module__)
print('to numpy:')
print(df.to_numpy())
print('notna:')
print(df.notna())
print('notnull:')
print(df.notnull())
print('nunique:')
print(df.nunique())
print('ndim:',df.ndim)
print('pct change:')
print(df.pct_change())
print('prod:')
print(df.prod())
print('product:')
print(df.product())
print('array priority:',df.__array_priority__)
print('plot:',df.plot())
print('quantile:')
print(df.quantile())
print('rank:')
print(df.rank())
print('round:')
print(df.round())
print('sample:')
print(df.sample())
print('sem:')
print(df.sem())
print('shift:')
print(df.shift())
print('skew:')
print(df.skew())
print('stack:')
print(df.stack())
print('std:')
print(df.std())
print('sum:')
print(df.sum())
print('shape:',df.shape)
print('size:',df.size)
print('style:',df.style)
print('tail:')
print(df.tail())
print('T:')
print(df.T)
print('to xarray:',df.to_xarray())
print('unstack:')
print(df.unstack())
print('values:')
print(df.values)
print('var:')
print(df.var())
df_Setosa = df[df['class'] == 'Iris-setosa']
df_Versicolor = df[df['class'] == 'Iris-versicolor']
df_Virginica = df[df['class'] == 'Iris-virginica']
matplotlib.pyplot.figure(figsize=(20,20))
matplotlib.pyplot.scatter(df_Setosa['petal length'],df_Setosa['petal width'], label = "Setosa") 
matplotlib.pyplot.scatter(df_Versicolor['petal length'],df_Versicolor['petal width'], label = "Versicolor") 
matplotlib.pyplot.scatter(df_Virginica['petal length'],df_Virginica['petal width'], label = "Virginica") 
matplotlib.pyplot.legend()
matplotlib.pyplot.show()
fig,(ax,ax1,ax2,ax3) = matplotlib.pyplot.subplots(1,4,figsize=(10,10),sharex=True)
ax.boxplot(df['sepal width'])
ax1.boxplot(df['petal length'])
ax2.boxplot(df['petal width'])
ax3.boxplot(df['sepal width'])
matplotlib.pyplot.show()
fig,(ax,ax1,ax2,ax3) = matplotlib.pyplot.subplots(1,4,figsize=(10,10),sharey=True)
ax.boxplot(df['sepal width'])
ax1.boxplot(df['petal length'])
ax2.boxplot(df['petal width'])
ax3.boxplot(df['sepal width'])
matplotlib.pyplot.show()
fig,(ax,ax1,ax2,ax3) = matplotlib.pyplot.subplots(1,4,figsize=(10,10),sharex=True)
ax.hist(df['sepal width'])
ax1.hist(df['petal length'])
ax2.hist(df['petal width'])
ax3.hist(df['sepal width'])
matplotlib.pyplot.show()
fig,(ax,ax1,ax2,ax3) = matplotlib.pyplot.subplots(1,4,figsize=(10,10),sharey=True)
ax.hist(df['sepal width'])
ax1.hist(df['petal length'])
ax2.hist(df['petal width'])
ax3.hist(df['sepal width'])
matplotlib.pyplot.show()
import pandas,matplotlib.pyplot
df = pandas.read_csv("./data/iris.data",header=None)
df = df.rename(columns={0:'sepal length',1:'sepal width',2:'petal length',3:'petal width',4:'class'})
c0,c1,c2 = df['class'].value_counts()
c0 = df[df['class'] == 'Iris-setosa']
print(c0)
c1 = df[df['class'] == 'Iris-virginica']
print(c1)
c2 = df[df['class'] == 'Iris-versicolor']
print(c2)
ni = [-1] + list(df.index)
df = df.reindex(ni)
df.loc[-1] = ['sepal length','sepal width','petal length','petal width','class']
print(df)
print(df['class'].value_counts())
label_encode = {"class": {"Iris-setosa":1}}
label_encode1 = {"class": {"Iris-versicolor":2}}
label_encode2 = {"class": {"Iris-virginica":3}}
df.replace(label_encode,inplace=True)
df.replace(label_encode1,inplace=True)
df.replace(label_encode2,inplace=True)
KNN2 = KNeighborsClassifier()
x1 = df.drop(columns='class',axis=1)
y1 = df['class']
print(x1.head())
print(y1.head())
KNN2.fit(x1,y1)
test5 = pandas.DataFrame()
test5['sepal length'] = [5]
test5['sepal width'] = [3]
test5['petal length'] = [5]
test5['petal width'] = [2]
predict_flower4 = KNN2.predict(test5)
if predict_flower4 == 1:
    print('iris-setosa')
elif predict_flower4 == 2:
    print('iris-versicolor')
else:
    print('iris-virginica')
dt1 = tree.DecisionTreeClassifier()
x4 = df.drop(columns='class',axis=1)
y = df['class']
print(x4.head())
print(y.head())
dt1 = dt1.fit(x4,y)
test8 = pandas.DataFrame()
test8['sepal length'] = [5.8]
test8['sepal width'] = [2.3]
test8['petal length'] = [5]
test8['petal width'] = [1.3]
predict_flower7 = dt1.predict(test8)
if predict_flower7 == 1:
    print('iris-setosa')
elif predict_flower7 == 2:
    print('iris-versicolor')
else:
    print('iris-virginica')
df[(df[['Mathematics score', 'English score', 'Science score']] < 0).any(axis=1)|(df[['Mathematics score', 'English score', 'Science score']] >100).any(axis=1)]
df[(df['Mathematics score']<0)|(df['Mathematics score']>100)]
flower_types = []
for ii in range(0,y_new.shape[0]):
    flower_types.append(numpy.argmax(y_new[ii,:]))
print(flower_types)
for i in range(len(flower_types)):
    if flower_types[i]==0:
        flower_types[i]='Iris-Setosa'
    if flower_types[i]==1:
        flower_types[i]='Iris-Versicolor'
    if flower_types[i]==2:
        flower_types[i]='Iris-Verginica'
print(flower_types)
